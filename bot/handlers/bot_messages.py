from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery

from bot.keyboards.inline import *
from bot.keyboards.reply import *

from bot.database.db_connector import *
from bot.database.methods import *

from bot.utils.format_data import *

from bot.config_reader import config


router = Router()
bot = Bot(config.bot_token.get_secret_value(), parse_mode='HTML')


async def main_menu_user(user_id, message_id):
    main_text = "–ò—Å–∫–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏\n"
    main_text += "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç\n"
    main_text += "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—é–º–µ\n"
    main_text += "–û –±–æ—Ç–µ\n"
    await bot.send_message(user_id, main_text, reply_markup=await get_choose_menu_user_buttons(), disable_notification=True)

@router.message(F.text=='üîç –ò—Å–∫–∞—Ç—å –í–∞–∫–∞–Ω—Å–∏–∏')
async def seacrh_vacancies(msg: Message):
    user_id = msg.from_user.id
    user_data = await get_user_data(user_id)
    
    if user_data:
        random_vacancy = await get_random_vacancy_for_user(user_id)
        
        if random_vacancy:
            formatted_vacancy = await format_vacancy(random_vacancy)
            await msg.answer(
                formatted_vacancy,
                parse_mode="HTML",
                reply_markup=await get_send_or_dislike_resume_keyboard()
            )
        else:
            await msg.answer(
                "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞–∫–∞–Ω—Å–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.",
                reply_markup=None
            )

    else: 
        await msg.answer(
            "–ü–æ—Ö–æ–∂–µ —á—Ç–æ —Ç—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –°–∞–º–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞–∏—Ü—é! /start",
            reply_markup=None
        )
        
@router.message(F.text=="üëé")
async def dislike_resume(msg: Message):
    user_id = msg.from_user.id
    user_data = await get_user_data(user_id)

    if user_data:
        random_vacancy = await get_random_vacancy_for_user(user_id)

        if random_vacancy:
            formatted_vacancy = await format_vacancy(random_vacancy)
            await msg.answer(
                formatted_vacancy,
                parse_mode="HTML",
                reply_markup=await get_send_or_dislike_resume_keyboard()
            )
        else:
            await msg.answer(
                "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞–∫–∞–Ω—Å–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.",
                reply_markup=None
            )

@router.message(F.text=="‚úâ")
async def send_resume_vacancy(msg: Message):
    user_id = msg.from_user.id
    user_data = await get_user_data(user_id)

    if user_data:
        await msg.answer("–†–µ–∑—é–º–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∞–Ω–∫–µ—Ç –¥–∞–ª—å—à–µ!")
        await seacrh_vacancies(msg)

@router.message(F.text == 'üò¥')
async def personal_sleep(msg: Message):
    await msg.answer("–û—Ç–ª–∏—á–Ω–æ! –°–∞–º–æ–µ –≤—Ä–µ–º—è —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä–≤ üòÅ", reply_markup=await get_choose_menu_user_buttons()) 

@router.message(F.text == 'üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç')
async def personal_cabinet(msg: Message):
    user_id = msg.from_user.id

    user_data = await get_user_data(user_id)













    if user_data:
        fullname = user_data.get("user_fio", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        age = user_data.get("user_age", "–ù–µ —É–∫–∞–∑–∞–Ω")
        location = user_data.get("user_location_text", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        citizenship = user_data.get("user_citizenship", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        desired_position = user_data.get("user_desired_position", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        desired_salary = user_data.get("user_desired_salary_level", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        employment_type = user_data.get("user_employment_type", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        experience = user_data.get("user_experience", [])
        print(experience)
        user_info_text = f"–§–ò–û: {fullname}\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {location}\n–ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ: {citizenship}\n–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å: {desired_position}\n–ñ–µ–ª–∞–µ–º–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: {desired_salary}\n–ñ–µ–ª–∞–µ–º–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å: {employment_type}\n–û—Å–æ–±–µ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:\n\n–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:\n{experience}"

        await msg.answer(f'–í–æ—Ç —Ç–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è:\n\n{user_info_text}', reply_markup=await get_resume_button())
    else:
        await msg.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", reply_markup=None)

@router.message(F.text== '‚Ü©Ô∏è –ù–∞–∑–∞–¥')
async def back_to_main_menu(msg: Message):
    user_id = msg.from_user.id
    user_data = await get_user_data(user_id)
    if user_data:
        name = user_data.get("name")
        await main_menu_user(user_id, name)
    else:
        await msg.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞–∂–∞–≤ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start", reply_markup=None)

@router.message(F.text=='‚ÑπÔ∏è –û –±–æ—Ç–µ')
async def about_bot(msg: Message):
    about_text = "–î–∞–Ω–Ω—ã–π –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –∫–æ–º–ø–∞–Ω–∏—è–º –≤ —Å—Ñ–µ—Ä–µ –æ–±—â–µ–ø–∏—Ç–∞ –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤."
    await msg.answer(about_text)
    
@router.message(F.text=='‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—é–º–µ')
async def red_resume(msg: Message):
    await msg.answer("–ñ–µ–ª–∞–µ—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å –∏–ª–∏ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ?", reply_markup=await get_save_restart_keyboard())